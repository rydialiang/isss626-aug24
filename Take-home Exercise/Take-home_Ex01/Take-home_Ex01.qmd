---
title: "Take-home Ex01"
author: "Liang Xiuhao Rydia"
date: "Sep 2, 2024"
date-modified: "last-modified"
execute:
  eval: true
  echo: true
  warning: false
  freeze: true
format: 
  html:
    code-fold: true
    code-summary: "Show the code"
---

![](images/A_detailed_illustration_of_a_study_on_road_traffic_landscape.jpeg)

## 1.0 Introduction & Objectives

In this Take-Home Exercise 1, we will be discovering factors affecting road traffic accidents in the [Bangkok Metropolitan Region BMR](https://en.wikipedia.org/wiki/Bangkok_Metropolitan_Region) by employing both spatial and spatio-temporal point patterns analysis methods.

The specific objectives of this take-home exercise are as follows:

-   To visualize the spatio-temporal dynamics of road traffic accidents in BMR using appropriate statistical graphics and geovisualization methods.

-   To conduct detailed spatial analysis of road traffic accidents using appropriate Network Spatial Point Patterns Analysis methods.

-   To conduct detailed spatio-temporal analysis of road traffic accidents using appropriate Temporal Network Spatial Point Patterns Analysis methods.

### 1.1 The Study Area

-   Thailand has four administrative levels:

    -   Level 1 - Provinces (Changwat) - Total: 76 provinces + Bangkok as special administrative area.

    -   Level 2 - District (Amphoe)

    -   Level 3 - Sub-district (Tambon)

    -   Level 4 - Village (Muban)

-   In this exercise we will focus our analysis on the study area called the [Bangkok Metropolitan Region (BMR)](https://en.wikipedia.org/wiki/Bangkok_Metropolitan_Region), which consists of [Bangkok](https://en.wikipedia.org/wiki/Bangkok) and its five adjacent provinces, namely [Nakhon Pathom](https://en.wikipedia.org/wiki/Nakhon_Pathom_Province "Nakhon Pathom Province"), [Pathum Thani](#0 "Pathum Thani Province"), [Nonthaburi](#0 "Nonthaburi Province"), [Samut Prakan](#0 "Samut Prakan Province"), and [Samut Sakhon](#0 "Samut Sakhon Province").

-   To confirm the EPSG code for the study area, we can check it on [epsg.io](https://epsg.io/). Enter "Thailand" and we will yield several results under Projected CRS:

    -   [Indian 1954 / UTM zone 46N](https://epsg.io/23946) - EPSG 23946 with transformation: 1153

    -   [Indian 1954 / UTM zone 47N](https://epsg.io/23947) - EPSG 23947 with transformation 1153

    -   [Indian 1954 / UTM zone 48N](https://epsg.io/23948) - EPSG 23948 with transformation 1153

    -   [Indian 1975 / UTM zone 47N](https://epsg.io/24047) - EPSG 24047 with transformation 1812

    -   [Indian 1975 / UTM zone 48N](https://epsg.io/24048) - EPSG 24048 with transformation 1812

    -   [WGS 84 / UTM zone 47N](https://epsg.io/32647) - EPSG 32647

    -   [WGS 84 / UTM zone 48N](https://epsg.io/32648) - EPSG 32648

    -   [WGS 84 / PDC Mercator](https://epsg.io/3832) - EPSG 3832

We will be using Geodetic CRS **WGS 84** as it is a global standard. It leaves us with the last three options. As will click into each result, we will observe that [WGS 84 / PDC Mercator](https://epsg.io/3832) covers wide area of use, and perhaps, more suitable for seafare. Whereas for [WGS 84 / UTM zone 47N](https://epsg.io/32647) and [WGS 84 / UTM zone 48N](https://epsg.io/32648), the area are more precise, defined by the Easting and Northing.

| [WGS 84 / UTM zone 47N](https://epsg.io/32647) - EPSG 32647                                                                                                                                                                                                                                                                                                                                   | [WGS 84 / UTM zone 48N](https://epsg.io/32648) - EPSG 32648                                                                                                                                                                                                                                                                                                                                                            |
|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
| **Area of use:** [Between 96°E and 102°E, northern hemisphere between equator and 84°N, onshore and offshore. China. Indonesia. Laos. Malaysia - West Malaysia. Mongolia. Myanmar (Burma). Russian Federation. Thailand.](https://epsg.io/?q=Between+96%C2%B0E+and+102%C2%B0E%2C+northern+hemisphere+between+equator+and+84%C2%B0N%2C+onshore+and+offshore.+China.+Indonesia.+Laos.+Malaysia) | **Area of use:** [Between 102°E and 108°E, northern hemisphere between equator and 84°N, onshore and offshore. Cambodia. China. Indonesia. Laos. Malaysia - West Malaysia. Mongolia. Russian Federation. Singapore. Thailand. Vietnam.](https://epsg.io/?q=Between+102%C2%B0E+and+108%C2%B0E%2C+northern+hemisphere+between+equator+and+84%C2%B0N%2C+onshore+and+offshore.+Cambodia.+China.+Indonesia.+Laos.+Malaysia) |

Considering Bangkok's Coordinate (13.7563° N, 100.5018° E), we will use [WGS 84 / UTM zone 47N](https://epsg.io/32647) - EPSG 32647, as its Northing of 13.7563° falls between the Equator and 84°N, and its Easting of 100.5018° falls between 96°E and 102°E, which are both in the area of use as indicated in the table above.

## 1.2 The Datasets

-   [Thailand Road Accident \[2019-2022\]](https://www.kaggle.com/datasets/thaweewatboy/thailand-road-accident-2019-2022) on Kaggle

-   [Thailand Roads (OpenStreetMap Export)](https://data.humdata.org/dataset/hotosm_tha_roads) on HDX.

-   [Thailand - Subnational Administrative Boundaries](https://data.humdata.org/dataset/cod-ab-tha?) on HDX.

-   

::: callout-caution
## On Projection

-   to check on the following:

    -   WGS 84 / UTM zone 47N

    -   EPSG code 32647
:::

## 2.0 Loading Library and Importing Traffic Accident Data

```{r}
pacman::p_load(sf, 
               raster,
               spNetwork,
               tmap, 
               tidyverse)
```

## 3.0 Importing Data

### 3.1 Importing Aspatial Data and Converting it into Spatial Data

Since the `Thailand Road Accident [2019-2022]` is data set is in csv file format, we will use [read_csv()](https://readr.tidyverse.org/reference/read_delim.html) of readr package to import `Thailand Road Accident [2019-2022]`.Following which, we use the pipe function and dplyr::filter() to filter out rows that has "na" or is empty in value. Next, we use st_as_sf to combine the longitude and latitude in the csv file can combine it into "geometry" column. Lastly, we use st_transform to change the Coordinate Reference System (CRS) to 32647, which is Thailand's [ESPG code](https://epsg.io/map#srs=32647&x=769964.9694806639&y=1455180.7056970089&z=5&layer=streets). The output R object is called rdacc_sf and it is a sf data frame.

```{r}
rdacc_sf <- read_csv("data/rawdata/thai_road_accident_2019_2022.csv") %>%
  filter(!is.na(longitude) &longitude != "",
         !is.na(latitude) & latitude != "") %>% 
  st_as_sf(coords = c("longitude", "latitude"),
           crs = 4326) %>% 
  st_transform(crs = 32647)
```

::: callout-note
## Notes on rdacc_sf

-   incident_datetime is datetime format of POSIXct.

-   st_as_sf(coords = c("longitude", "latitude"), crs = 4326) combines and longitude and latitude columns into geometry column

-   Thai projection code is 32647, hence we use this code chunk: st_transform(crs = 32647)

-   Filter is used to remove the longitude and latitude that has na as value.

-   Check what is the number of data lost after removing na. Make sure the study region, the data lost is not significant. (not more than 5% lost)

-   use readr::read_csv() to ensure the data is imported as tibble data frame. Do not use read.csv().

-   Check the data.
:::

### 3.1.1 Wrangling the Date Fields

Using tidyverse::lubridate

```{r}
#| eval: False
rdacc_sf <- rdacc_sf %>% 
  mutate(DayOfWeek = day(incident_datetime)) %>% 
  mutate(Month = month(incident_datetime,
                       label = TRUE,
                       abbr = TRUE))
```

```{r}
write_rds(rdacc_sf, "data/rds/rdacc_sf.rds")
```

```{r}
rdacc_sf <- read_rds("data/rds/rdacc_sf.rds")
```

::: callout-note
## Lubridate

-   lubridate::month(): label = TRUE -\> change it into factor. If we do not use label = TRUE, it will be sorted using alphabetical logic. If it is a factor, it will be sorted according to date/month logic from Jan to Dec.
:::

### 3.2 Importing Spatial Data

Importing the [Thailand - Subnational Administrative Boundaries](https://data.humdata.org/dataset/cod-ab-tha?)

```{r}

```

## References

News: <https://www.who.int/news-room/fact-sheets/detail/road-traffic-injuries>
