{
  "hash": "f99fe3a12dc097365a8566e425c7e9a4",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Take-home Ex01\"\nauthor: \"Liang Xiuhao Rydia\"\ndate: \"Sep 2, 2024\"\ndate-modified: \"last-modified\"\nexecute:\n  eval: true\n  echo: true\n  warning: false\n  freeze: true\nformat: \n  html:\n    code-fold: true\n    code-summary: \"Show the code\"\n---\n\n\n![](images/A_detailed_illustration_of_a_study_on_road_traffic_landscape.jpeg)\n\n## 1.0 Introduction & Objectives\n\nIn this Take-Home Exercise 1, we will be discovering factors affecting road traffic accidents in the [Bangkok Metropolitan Region BMR](https://en.wikipedia.org/wiki/Bangkok_Metropolitan_Region) by employing both spatial and spatio-temporal point patterns analysis methods.\n\nThe specific objectives of this take-home exercise are as follows:\n\n-   To visualize the spatio-temporal dynamics of road traffic accidents in BMR using appropriate statistical graphics and geovisualization methods.\n\n-   To conduct detailed spatial analysis of road traffic accidents using appropriate Network Spatial Point Patterns Analysis methods.\n\n-   To conduct detailed spatio-temporal analysis of road traffic accidents using appropriate Temporal Network Spatial Point Patterns Analysis methods.\n\n### 1.1 The Study Area\n\n-   Thailand has four administrative levels:\n\n    -   Level 1 - Provinces (Changwat) - Total: 76 provinces + Bangkok as special administrative area.\n\n    -   Level 2 - District (Amphoe)\n\n    -   Level 3 - Sub-district (Tambon)\n\n    -   Level 4 - Village (Muban)\n\n-   In this exercise we will focus our analysis on the study area called the [Bangkok Metropolitan Region (BMR)](https://en.wikipedia.org/wiki/Bangkok_Metropolitan_Region), which consists of [Bangkok](https://en.wikipedia.org/wiki/Bangkok) and its five adjacent provinces, namely [Nakhon Pathom](https://en.wikipedia.org/wiki/Nakhon_Pathom_Province \"Nakhon Pathom Province\"), [Pathum Thani](#0 \"Pathum Thani Province\"), [Nonthaburi](#0 \"Nonthaburi Province\"), [Samut Prakan](#0 \"Samut Prakan Province\"), and [Samut Sakhon](#0 \"Samut Sakhon Province\").\n\n-   To confirm the EPSG code for the study area, we can check it on [epsg.io](https://epsg.io/). Enter \"Thailand\" and we will yield several results under Projected CRS:\n\n    -   [Indian 1954 / UTM zone 46N](https://epsg.io/23946) - EPSG 23946 with transformation: 1153\n\n    -   [Indian 1954 / UTM zone 47N](https://epsg.io/23947) - EPSG 23947 with transformation 1153\n\n    -   [Indian 1954 / UTM zone 48N](https://epsg.io/23948) - EPSG 23948 with transformation 1153\n\n    -   [Indian 1975 / UTM zone 47N](https://epsg.io/24047) - EPSG 24047 with transformation 1812\n\n    -   [Indian 1975 / UTM zone 48N](https://epsg.io/24048) - EPSG 24048 with transformation 1812\n\n    -   [WGS 84 / UTM zone 47N](https://epsg.io/32647) - EPSG 32647\n\n    -   [WGS 84 / UTM zone 48N](https://epsg.io/32648) - EPSG 32648\n\n    -   [WGS 84 / PDC Mercator](https://epsg.io/3832) - EPSG 3832\n\nWe will be using Geodetic CRS **WGS 84** as it is a global standard. It leaves us with the last three options. As will click into each result, we will observe that [WGS 84 / PDC Mercator](https://epsg.io/3832) covers wide area of use, and perhaps, more suitable for seafare. Whereas for [WGS 84 / UTM zone 47N](https://epsg.io/32647) and [WGS 84 / UTM zone 48N](https://epsg.io/32648), the area are more precise, defined by the Easting and Northing.\n\n| [WGS 84 / UTM zone 47N](https://epsg.io/32647) - EPSG 32647                                                                                                                                                                                                                                                                                                                                   | [WGS 84 / UTM zone 48N](https://epsg.io/32648) - EPSG 32648                                                                                                                                                                                                                                                                                                                                                            |\n|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| **Area of use:** [Between 96°E and 102°E, northern hemisphere between equator and 84°N, onshore and offshore. China. Indonesia. Laos. Malaysia - West Malaysia. Mongolia. Myanmar (Burma). Russian Federation. Thailand.](https://epsg.io/?q=Between+96%C2%B0E+and+102%C2%B0E%2C+northern+hemisphere+between+equator+and+84%C2%B0N%2C+onshore+and+offshore.+China.+Indonesia.+Laos.+Malaysia) | **Area of use:** [Between 102°E and 108°E, northern hemisphere between equator and 84°N, onshore and offshore. Cambodia. China. Indonesia. Laos. Malaysia - West Malaysia. Mongolia. Russian Federation. Singapore. Thailand. Vietnam.](https://epsg.io/?q=Between+102%C2%B0E+and+108%C2%B0E%2C+northern+hemisphere+between+equator+and+84%C2%B0N%2C+onshore+and+offshore.+Cambodia.+China.+Indonesia.+Laos.+Malaysia) |\n\nConsidering Bangkok's Coordinate (13.7563° N, 100.5018° E), we will use [WGS 84 / UTM zone 47N](https://epsg.io/32647) - EPSG 32647, as its Northing of 13.7563° falls between the Equator and 84°N, and its Easting of 100.5018° falls between 96°E and 102°E, which are both in the area of use as indicated in the table above.\n\n## 1.2 The Datasets\n\n-   [Thailand Road Accident \\[2019-2022\\]](https://www.kaggle.com/datasets/thaweewatboy/thailand-road-accident-2019-2022) on Kaggle\n\n-   [Thailand Roads (OpenStreetMap Export)](https://data.humdata.org/dataset/hotosm_tha_roads) on HDX.\n\n-   [Thailand - Subnational Administrative Boundaries](https://data.humdata.org/dataset/cod-ab-tha?) on HDX.\n\n-   \n\n::: callout-caution\n## On Projection\n\n-   to check on the following:\n\n    -   WGS 84 / UTM zone 47N\n\n    -   EPSG code 32647\n:::\n\n## 2.0 Loading Library and Importing Traffic Accident Data\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(sf, \n               raster,\n               spNetwork,\n               tmap, \n               tidyverse)\n```\n:::\n\n\n## 3.0 Importing Data\n\n### 3.1 Importing Aspatial Data and Converting it into Spatial Data\n\nSince the `Thailand Road Accident [2019-2022]` is data set is in csv file format, we will use [read_csv()](https://readr.tidyverse.org/reference/read_delim.html) of readr package to import `Thailand Road Accident [2019-2022]`.Following which, we use the pipe function and dplyr::filter() to filter out rows that has \"na\" or is empty in value. Next, we use st_as_sf to combine the longitude and latitude in the csv file can combine it into \"geometry\" column. Lastly, we use st_transform to change the Coordinate Reference System (CRS) to 32647, which is Thailand's [ESPG code](https://epsg.io/map#srs=32647&x=769964.9694806639&y=1455180.7056970089&z=5&layer=streets). The output R object is called rdacc_sf and it is a sf data frame.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrdacc_sf <- read_csv(\"data/rawdata/thai_road_accident_2019_2022.csv\") %>%\n  filter(!is.na(longitude) &longitude != \"\",\n         !is.na(latitude) & latitude != \"\") %>% \n  st_as_sf(coords = c(\"longitude\", \"latitude\"),\n           crs = 4326) %>% \n  st_transform(crs = 32647)\n```\n:::\n\n\n::: callout-note\n## Notes on rdacc_sf\n\n-   incident_datetime is datetime format of POSIXct.\n\n-   st_as_sf(coords = c(\"longitude\", \"latitude\"), crs = 4326) combines and longitude and latitude columns into geometry column\n\n-   Thai projection code is 32647, hence we use this code chunk: st_transform(crs = 32647)\n\n-   Filter is used to remove the longitude and latitude that has na as value.\n\n-   Check what is the number of data lost after removing na. Make sure the study region, the data lost is not significant. (not more than 5% lost)\n\n-   use readr::read_csv() to ensure the data is imported as tibble data frame. Do not use read.csv().\n\n-   Check the data.\n:::\n\n### 3.1.1 Wrangling the Date Fields\n\nUsing tidyverse::lubridate\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrdacc_sf <- rdacc_sf %>% \n  mutate(DayOfWeek = day(incident_datetime)) %>% \n  mutate(Month = month(incident_datetime,\n                       label = TRUE,\n                       abbr = TRUE))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nwrite_rds(rdacc_sf, \"data/rds/rdacc_sf.rds\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nrdacc_sf <- read_rds(\"data/rds/rdacc_sf.rds\")\n```\n:::\n\n\n::: callout-note\n## Lubridate\n\n-   lubridate::month(): label = TRUE -\\> change it into factor. If we do not use label = TRUE, it will be sorted using alphabetical logic. If it is a factor, it will be sorted according to date/month logic from Jan to Dec.\n:::\n\n### 3.2 Importing Spatial Data\n\nImporting the [Thailand - Subnational Administrative Boundaries](https://data.humdata.org/dataset/cod-ab-tha?)\n\n\n::: {.cell}\n\n:::\n\n\n## References\n\nNews: <https://www.who.int/news-room/fact-sheets/detail/road-traffic-injuries>\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}