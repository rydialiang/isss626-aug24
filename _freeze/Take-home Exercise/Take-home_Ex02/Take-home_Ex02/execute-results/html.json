{
  "hash": "b9c1b2d819b12542d245566025305b41",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Take-home Ex 2\"\nauthor: \"Liang Xiuhao Rydia\"\ndate: \"Oct 3, 2024\"\ndate-modified: \"last-modified\"\nexecute:\n  eval: true\n  echo: true\n  warning: false\n  freeze: true\n---\n\n\n## Take-home Exercise 2: Discovering impacts of COVID-19 on Thailand tourism economy at the province level using spatial and spatio-temporal statistics\n\n## 1.0 Background\n\n### **1.1 Objectives**\n\nWe aim to discover:\n\n-   If the key indicators of tourism economy of Thailand are independent from space and space and time.\n\n-   If the tourism economy is indeed spatial and spatio-temporal dependent, then, you would like to detect where are the clusters and outliers, and the emerging hot spot/cold spot areas.\n\n### **1.2 The Task**\n\nThe specific tasks of this take-home exercise are as follows:\n\n-   Using appropriate function of **sf** and **tidyverse**, preparing the following geospatial data layer:\n\n    -   a study area layer in sf polygon features. It must be at [province level](https://en.wikipedia.org/wiki/Provinces_of_Thailand) (including Bangkok) of Thailand.\n\n    -   a tourism economy indicators layer within the study area in sf polygon features.\n\n    -   a derived tourism economy indicator layer in [**spacetime s3 class of sfdep**](https://sfdep.josiahparry.com/articles/spacetime-s3). Keep the time series at **month and year levels**.\n\n-   Using the extracted data, perform global spatial autocorrelation analysis by using [sfdep methods](https://is415-gaa-tskam.netlify.app/in-class_ex/in-class_ex05/in-class_ex05-glsa).\n\n-   Using the extracted data, perform local spatial autocorrelation analysis by using [sfdep methods](https://r4gdsa.netlify.app/chap10.html).\n\n-   Using the extracted data, perform emerging hotspot analysis by using [sfdep methods](https://is415-gaa-tskam.netlify.app/in-class_ex/in-class_ex05/in-class_ex05-ehsa).\n\n-   Describe the spatial patterns revealed by the analysis above.\n\n### **1.3 The Data**\n\nFor the purpose of this take-home exercise, two data sets shall be used, they are:\n\n-   [Thailand Domestic Tourism Statistics](https://www.kaggle.com/datasets/thaweewatboy/thailand-domestic-tourism-statistics) at Kaggle. You are required to use **version 2** of the data set.\n\n-   [Thailand - Subnational Administrative Boundaries](https://data.humdata.org/dataset/cod-ab-tha?) at HDX. You are required to use the province boundary data set.\n\n## 2.0 Getting Started\n\n### 2.1 Setting up the R environment\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(sfdep, tmap, \n               sf, plotly, \n               tidyverse,\n               Kendall)\n```\n:::\n\n\n### 2.2 Loading and Wrangling the Data\n\nLoading the tourism economy indicators data:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntourism <- read_csv(\"data/rawdata/thailand_domestic_tourism_2019_2023_ver2.csv\") %>% \n  select(1,3,5:7) %>% \n  rename(province = province_eng)\n\nwrite_rds(tourism, \"data/rds/tourism.rds\")\n```\n:::\n\n\nLoading the geospatial data:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nprovince <- st_read(\"data/rawdata\",\n                    layer = \"tha_admbnda_adm1_rtsd_20220121\" ) %>% \n  dplyr::select(3,17) %>% \n  st_transform(crs = 32647) %>% \n  rename(province = ADM1_EN )\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `tha_admbnda_adm1_rtsd_20220121' from data source \n  `C:\\rydialiang\\isss626-aug24\\Take-home Exercise\\Take-home_Ex02\\data\\rawdata' \n  using driver `ESRI Shapefile'\nSimple feature collection with 77 features and 16 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 97.34336 ymin: 5.613038 xmax: 105.637 ymax: 20.46507\nGeodetic CRS:  WGS 84\n```\n\n\n:::\n\n```{.r .cell-code}\nwrite_rds(province, \"data/rds/province.rds\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(province)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n### 2.3 Joining the dataset\n\nJoining the dataset using the province column.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata <- left_join(tourism, \n                  province)\n\nwrite_rds(data, \"data/rds/data.rds\")\n```\n:::\n\n\n### 2.4 Setting Seeds to Ensure Reproducibility\n\nThe set. seed() function is used to set a Random seed which Pseudorandom number generators use when generating \"random\" numbers. By using this function, we ensure that the randomly generated numbers remain the same when the code are reproduced.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(12345)\n```\n:::\n\n\n## 3.0 Exploratory Data Analysis (EDA)\n",
    "supporting": [
      "Take-home_Ex02_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}