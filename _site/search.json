[
  {
    "objectID": "In-class Exercise/In-class_Ex02/In-class_Ex02.html",
    "href": "In-class Exercise/In-class_Ex02/In-class_Ex02.html",
    "title": "In-class Ex 02",
    "section": "",
    "text": "Show the code\npacman::p_load(sf, raster, spatstat, tmap, tidyverse)"
  },
  {
    "objectID": "In-class Exercise/In-class_Ex02/In-class_Ex02.html#issue-1-installing-maptools",
    "href": "In-class Exercise/In-class_Ex02/In-class_Ex02.html#issue-1-installing-maptools",
    "title": "In-class Ex 02",
    "section": "Issue 1: Installing maptools",
    "text": "Issue 1: Installing maptools\nmaptools is retired and binary is removed from CRAN. However, we can download from Posit Public Package Manager snapshots by using the code chunk below:\n\n\nShow the code\ninstall.packages(\"maptools\",\n                 repos = \"https://packagemanager.posit.co/cran/2023-10-13\")\n\n\n\n\n\n\n\n\nNote\n\n\n\n\nAvoid sp because we have to use maptools and maptools is retired as mentioned.\nUse sf straight. We can convert to ppp directly without more steps compared to sp.\nShiny is developed by Posit. Dedicate support for Shiny repository. We can request Posit to have a repository required by you.\nRemember to add “#| eval: False” in quarto code chunk after installation:"
  },
  {
    "objectID": "In-class Exercise/In-class_Ex02/In-class_Ex02.html#issue-2-creating-coastal-outline",
    "href": "In-class Exercise/In-class_Ex02/In-class_Ex02.html#issue-2-creating-coastal-outline",
    "title": "In-class Ex 02",
    "section": "Issue 2: Creating coastal outline",
    "text": "Issue 2: Creating coastal outline\nIn sf package, there are two functions allow us to combine XXXX.\n\nWorking with st_union()\nDerive the coastal outline sf tibble data.frame.\n\n\nShow the code\nsg_sf &lt;- mpsz_sf %&gt;% \n  st_union()\n\n\n\n\n\n\n\n\nsf package\n\n\n\n\nbuffer\nremove boundaries / dissolve (GIS term)\nmanipulate\n\n\n\n\n\n\n\n\n\nspatstat package\n\n\n\n\nppp: if input data is sp object. convert generic sp object.\nas.ppp: if input is sf. Allow us to create point object.\nas.owin: Allow us to create boundary.\nAdvice: Don’t use sp!!"
  },
  {
    "objectID": "In-class Exercise/In-class_Ex02/In-class_Ex02.html#kernel-density-estimation",
    "href": "In-class Exercise/In-class_Ex02/In-class_Ex02.html#kernel-density-estimation",
    "title": "In-class Ex 02",
    "section": "Kernel Density Estimation",
    "text": "Kernel Density Estimation\n2 different ways to covert KDE output into grid object.\n\nmaptools method(retired)\n\n\nShow the code\ngridded_kde_childcareSG_ad &lt;- maptools::as.SpatialGridDataFrame(kde_childcareSG_adaptive)\nspplot(gridded_kde_childcareSG_ad)\n\n\nspatstat.geom method (use this)\n\n\nShow the code\ngridded_kde_childcareSG_ad &lt;- as(kde_childcareSG_adaptive,\n                                 \"SpatialGridDataFrame\")\nspplot(gridded_kde_childcareSG_ad)"
  },
  {
    "objectID": "In-class Exercise/In-class_Ex02/In-class_Ex02.html#monte-carlo-simulation",
    "href": "In-class Exercise/In-class_Ex02/In-class_Ex02.html#monte-carlo-simulation",
    "title": "In-class Ex 02",
    "section": "Monte Carlo Simulation",
    "text": "Monte Carlo Simulation\n\n\nShow the code\nset.seed(12345)\n\n\n\n\n\n\n\n\nMonte Carlo Simulation\n\n\n\n\nremember to set.seed(1234), to ensure the simulation for randomisation is fixed.\nThis ensure reproducibility."
  },
  {
    "objectID": "In-class Exercise/In-class_Ex02/In-class_Ex02.html#edge-correction",
    "href": "In-class Exercise/In-class_Ex02/In-class_Ex02.html#edge-correction",
    "title": "In-class Ex 02",
    "section": "Edge Correction",
    "text": "Edge Correction\n\n\n\n\n\n\nEdge correction\n\n\n\n\nIf we are looking at Singapore as a whole, it is bounded by sea, hence we do not need worry about edge correction, as data points will not be in the sea.\nHowever, if we are looking at study region, for example, planning area, the points at the edges correction is important to handle biases that arises from estimating spatial statistics near the boundaries of a study region.\nImportant for K-function, L-function, pair correlation function, etc."
  },
  {
    "objectID": "In-class Exercise/In-class_Ex02/In-class_Ex02.html#checking-duplicates",
    "href": "In-class Exercise/In-class_Ex02/In-class_Ex02.html#checking-duplicates",
    "title": "In-class Ex 02",
    "section": "Checking Duplicates",
    "text": "Checking Duplicates\nFor example, there are multiple childcare centers in a mall, but all the points are stacked together.\n\nCheck duplicate\nCount the coincidence points\nSum up coincidence points\nUse jitter approach( nsim = 49) , simulate 50 times.\n\n\n\n\n\n\n\nImportant\n\n\n\n\nConvert multiple points into a marked point, and indicate as the sum of the number of coincidence points.\nIf the point is marked point, then we will not need to sum up multiplicity.\nNeed to check if the point is marked point."
  }
]